// Generator & datasource
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum UserRole {
  OWNER
  ADMIN
  EDITOR
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

// Models
model Tenant {
  id        String   @id @default(cuid())
  slug      String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users    UserTenant[]
  posts    Post[]
  sessions Session[]

  @@index([slug])
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  memberships UserTenant[]
  sessions    Session[]
  posts       Post[]       @relation("PostAuthor")
}

model UserTenant {
  userId    String
  tenantId  String
  role      UserRole @default(EDITOR)
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@id([userId, tenantId]) // composite PK: one membership per tenant
  @@index([tenantId])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  tenantId  String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([tenantId, expiresAt])
}

model Post {
  id        String     @id @default(cuid())
  tenantId  String
  authorId  String
  title     String
  content   String?
  status    PostStatus @default(DRAFT)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  author User   @relation("PostAuthor", fields: [authorId], references: [id])

  // Important for multi-tenancy: most queries will filter by tenant + date
  @@index([tenantId, createdAt])
}
